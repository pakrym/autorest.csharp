// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace AppConfiguration.Models
{
    /// <summary> Model factory for mocking. </summary>
    public static partial class ModelFactory
    {
        /// <summary> Creates a new instance of KeyListResult for mocking. </summary>
        /// <param name="items"> The collection value. </param>
        /// <param name="nextLink"> The URI that can be used to request the next set of paged results. </param>
        public static KeyListResult KeyListResult(IReadOnlyList<Key> items, string nextLink) => new KeyListResult(items, nextLink);

        /// <summary> Creates a new instance of Key for mocking. </summary>
        /// <param name="name"> . </param>
        public static Key Key(string name) => new Key(name);

        /// <summary> Creates a new instance of Error for mocking. </summary>
        /// <param name="type"> The type of the error. </param>
        /// <param name="title"> A brief summary of the error. </param>
        /// <param name="name"> The name of the parameter that resulted in the error. </param>
        /// <param name="detail"> A detailed description of the error. </param>
        /// <param name="status"> The HTTP status code that the error maps to. </param>
        public static Error Error(string type, string title, string name, string detail, int? status) => new Error(type, title, name, detail, status);

        /// <summary> Creates a new instance of KeyValueListResult for mocking. </summary>
        /// <param name="items"> The collection value. </param>
        /// <param name="nextLink"> The URI that can be used to request the next set of paged results. </param>
        public static KeyValueListResult KeyValueListResult(IReadOnlyList<KeyValue> items, string nextLink) => new KeyValueListResult(items, nextLink);

        /// <summary> Creates a new instance of LabelListResult for mocking. </summary>
        /// <param name="items"> The collection value. </param>
        /// <param name="nextLink"> The URI that can be used to request the next set of paged results. </param>
        public static LabelListResult LabelListResult(IReadOnlyList<Label> items, string nextLink) => new LabelListResult(items, nextLink);

        /// <summary> Creates a new instance of Label for mocking. </summary>
        /// <param name="name"> . </param>
        public static Label Label(string name) => new Label(name);
    }
}
